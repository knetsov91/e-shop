spring:
  application:
    name: eshop-order-service

  data:
    mongodb:
      database: orders
      username:  ${ORDER_SERVICE_QUERY_DB_USERNAME}
      authentication-database: admin
      password: ${ORDER_SERVICE_QUERY_DB_PASSWORD}
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: order-group
  jpa:
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

        format_sql: true
    hibernate:
      ddl-auto: update

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${ORDER_SERVICE_DB_HOST}:${ORDER_SERVICE_DB_PORT}/${ORDER_SERVICE_DB}
    username: ${ORDER_SERVICE_DB_USERNAME}
    password: ${ORDER_SERVICE_DB_PASSWORD}
  cloud:
    consul:
      host: localhost
      port: 8500
      config:
        enabled: false
      discovery:
        enabled: true
        health-check-path: /actuator/health
        register: true
        prefer-ip-address: true
        instance-id: ${spring.application.name}:${random.value}
        tags:
          - traefik.enable=true
          - traefik.http.routers.eshop-order-service.rule=PathPrefix(`/api/v1/orders`)
          - traefik.http.services.eshop-order-service.loadbalancer.server.port=8082

server:
  port: 8082



management:
  endpoints:
    web:
      exposure:
        include: health, prometheus