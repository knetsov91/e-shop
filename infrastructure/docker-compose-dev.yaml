version: '3.7'

services:
  user-service-db:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${USER_SERVICE_DB_PASSWORD}
      POSTGRES_DB: ${USER_SERVICE_DB}
    env_file: "dev.env"
    volumes:
      - user_service_db:/var/lib/postgresql/data
      - ./sql/user_service:/docker-entrypoint-initdb.d

  order-service-db:
    image: postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_PASSWORD: ${ORDER_SERVICE_DB_PASSWORD}
      POSTGRES_DB: ${ORDER_SERVICE_DB}
    env_file: "dev.env"
    volumes:
      - order_service_db:/var/lib/postgresql/data
      - ./sql/order_service:/docker-entrypoint-initdb.d

  traefik:
    image: traefik:v3.4
    network_mode: host
    depends_on:
      - consul
    volumes:
      - ./traefik/traefik-dev.yml:/etc/traefik/traefik.yml
      - ./logs:/logs

  consul:
    container_name: consul
    image: hashicorp/consul
    network_mode: host
  
  prometheus:
    image: prom/prometheus
    volumes:
      - eshop_prometheus:/prometheus
      - ./dev/prometheus/:/etc/prometheus/
    network_mode: host

  order-service-query-db:
    image: mongo
    environment:
       MONGO_INITDB_ROOT_USERNAME: ${ORDER_SERVICE_QUERY_DB_USERNAME}
       MONGO_INITDB_ROOT_PASSWORD: ${ORDER_SERVICE_QUERY_DB_PASSWORD}
    ports:
      - "27017:27017"

  kafka:
    image: apache/kafka
    ports:
      - "9092:9092"
volumes:
  user_service_db:
  order_service_db:
  eshop_prometheus: