version: '3.7'

services:
  user-service-db:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${USER_SERVICE_DB_PASSWORD}
      POSTGRES_DB: ${USER_SERVICE_DB}
    env_file: "dev.env"
    volumes:
      - user_service_db:/var/lib/postgresql/data
      - ./sql/user_service:/docker-entrypoint-initdb.d

  order-service-db:
    image: postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_PASSWORD: ${ORDER_SERVICE_DB_PASSWORD}
      POSTGRES_DB: ${ORDER_SERVICE_DB}
    env_file: "dev.env"
    volumes:
      - order_service_db:/var/lib/postgresql/data
      - ./sql/order_service:/docker-entrypoint-initdb.d

  traefik:
    image: traefik:v3.4
    network_mode: host
    depends_on:
      - consul
    volumes:
      - ./traefik/traefik-dev.yml:/etc/traefik/traefik.yml
      - ./logs:/logs

  consul:
    container_name: consul
    image: hashicorp/consul
    network_mode: host
  
  prometheus:
    image: prom/prometheus
    volumes:
      - eshop_prometheus:/prometheus
      - ./dev/prometheus/:/etc/prometheus/
    network_mode: host

  order-service-query-db:
    image: mongo
    environment:
       MONGO_INITDB_ROOT_USERNAME: ${ORDER_SERVICE_QUERY_DB_USERNAME}
       MONGO_INITDB_ROOT_PASSWORD: ${ORDER_SERVICE_QUERY_DB_PASSWORD}
    ports:
      - "27017:27017"

  kafka:
    image: apache/kafka
    ports:
      - "9092:9092"
  schema-registry:
    image: confluentinc/cp-schema-registry
    hostname: schema-registry
    depends_on: 
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.18.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node 
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - eshop_elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - elastic

  kibana:
    image: docker.elastic.co/kibana/kibana:8.18.2
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    networks:
      - elastic

volumes:
  user_service_db:
  order_service_db:
  eshop_prometheus:
  eshop_elasticsearch_data: